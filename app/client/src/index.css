body {
  margin: 0;
  font-family: Inter, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell',
    'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;
}

video {
  max-height: calc(100vh - 65px);
}

@-webkit-keyframes fadeIn {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

@keyframes fadeIn {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

@-webkit-keyframes blink-blue {
  0% {
    color: rgba(0, 219, 255, 0);
  }
  100% {
    color: rgba(0, 219, 255, 1);
  }
}

@keyframes blink-blue {
  0% {
    color: rgba(0, 219, 255, 0);
  }
  100% {
    color: rgba(0, 219, 255, 1);
  }
}

/* Video card CSS transition styles */
:root {
  --card-size: 300px;
  --card-gap: 16px;
  --placeholder-color: rgba(0, 0, 0, 0.2);
  --card-border-radius: 8px;
}

/* Main grid container */
.video-grid {
  display: flex;
  flex-wrap: wrap;
  width: 100%;
  padding: 16px;
  justify-content: flex-start;
  margin-bottom: 30px;
  min-height: 250px;
  position: relative;
}

/* Individual card container */
.video-card-container {
  width: var(--card-size);
  height: calc(var(--card-size) * 0.5625); /* Fixed 16:9 aspect ratio */
  margin-bottom: var(--card-gap);
  margin-right: var(--card-gap);
  position: relative;
  display: block;
  outline: 1px solid rgba(255,255,255,0.05);
  overflow: hidden;
  min-width: 160px;
  min-height: 90px;
  box-sizing: border-box;
}

/* No special classes needed for resizing */

/* Card inner content */
.card-inner {
  width: 100%;
  height: 100%;
  position: relative;
  border-radius: var(--card-border-radius);
  overflow: hidden;
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  background-color: var(--placeholder-color);
  display: block;
  cursor: pointer;
}

/* Slider active styles */
.slider-active .MuiSlider-thumb {
  box-shadow: 0 0 0 6px rgba(25, 118, 210, 0.16) !important;
}

.card-inner:hover {
  transform: translateY(-4px);
  box-shadow: 0 6px 12px rgba(0,0,0,0.2);
}

/* Video image - absolute positioned to maintain aspect ratio */
.video-card-image {
  position: absolute;
  top: 0;
  left: 0;
  width: 100% !important;
  height: 100% !important;
  object-fit: cover !important;
  transition: none !important; /* Critical: remove transition to prevent image reloading */
  will-change: transform; /* Optimize for GPU acceleration */
  border-radius: 4px;
  background-color: #000; /* Black background for images while loading */
}

/* Prevent any Material UI transitions from interfering */
.MuiBox-root, .MuiPaper-root, .MuiGrid-root {
  transition: none !important;
}

/* Only transition the specific properties we care about */
.MuiBox-root.video-card-container,
.MuiPaper-root.video-card-container,
.MuiGrid-root.video-card-container {
  transition: width var(--card-transition-duration) ease-in-out !important;
}

/* Ensure smooth slider thumb movement */
.MuiSlider-thumb {
  transition: left 0.1s linear !important;
}

/* Force hardware acceleration for smoother transitions */
.video-card-container, .video-card-image {
  transform: translateZ(0);
  backface-visibility: hidden;
}

/* Special handling during resize operations */
.resizing-cards .video-card-image {
  transition: none !important;
  will-change: auto; /* Reduces memory usage during transitions */
}

/* Set a default value for card size in the root */
:root {
  --card-size: 300px; /* Default value if not set elsewhere */
}

/* Video card container styles - make sure dimensions respect the CSS variable */
.video-card-container {
  width: var(--card-size) !important;
  height: calc(var(--card-size) * 0.5625) !important; /* 16:9 aspect ratio */
  flex-basis: var(--card-size) !important;
  min-width: var(--card-size) !important;
  max-width: var(--card-size) !important;
  transition: width 0.1s ease, height 0.1s ease;
  margin-bottom: 16px;
  display: block;
}

/* Video card image styles */
.video-card-image {
  width: 100%;
  height: 100%;
  object-fit: cover;
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  z-index: 1;
}

/* No transition classes needed */

/* Responsive grid based on card size */
@media (max-width: 600px) {
  .video-grid {
    justify-content: center;
  }
}

/* Preserve image aspect ratio during transitions */
.video-card-container * {
  transition-property: none !important;
}

/* Apply transitions only to the container itself */
.video-card-container {
  transition-property: width, height !important;
}

/* Fix button group border issues */
.MuiButtonGroup-root .MuiButtonGroup-grouped {
  border: none !important;
  border-right: none !important;
  border-left: none !important;
}

/* Ensure no divider lines in button groups */
.MuiButtonGroup-root .MuiDivider-root {
  display: none !important;
}
